class CoffeeMachine:
    running = False
    def __init__(self, water, milk, coffee, money):
        self.water = water
        self.milk = milk
        self.coffee = coffee
        self.money = money

        if not CoffeeMachine.running:
            self.start()

    def start(self):
         self.running = True
         self.action = input("You want to (buy, fill, take, remaining, exit):\n")
         print()
         if self.action == "buy":
             self.buy()
         elif self.action == "fill":
             self.fill()
         elif self.action == "take":
             self.take()
         elif self.action == "exit":
             exit()
         elif self.action == "remaining":
             self.status()

    def return_to_menu(self):
          print()
          self.start()

    def available_check(self):
          self.not_available = ""
          if self.water - self.reduced[0] < 0:
              self.not_available = "water"
          elif self.milk - self.reduced[1] < 0:
              self.not_available = "milk"
          elif self.coffee_beans - self.reduced[2] < 0:
              self.not_available = "coffee "
     

    if self.not_available != "":
        print(f"Sorry, not enough {self.not_available}!")
        return False
    else:
        print("I have enough resources, making you a coffee!")
        return True

    def deduct_supplies(self): 
        self.water -= self.reduced[0]
        self.milk -= self.reduced[1]
        self.coffee -= self.reduced[2]
        self.money += self.reduced[3]

    def buy(self):
        self.choice = input("What would you like to have? 1 - espresso, 2 - latte, 3 - cappuccino:\n")
        if self.choice == '1':
            self.reduced = [250, 0, 16, 4] 
            if self.available_check(): 
                self.deduct_supplies() 

        elif self.choice == '2':
            self.reduced = [350, 75, 20, 7]
            if self.available_check():
                self.deduct_supplies()

        elif self.choice == "3":
            self.reduced = [200, 100, 12, 6]
            if self.available_check():
                self.deduct_supplies()

        elif self.choice == "back":
            self.return_to_menu()

        self.return_to_menu()

    def fill(self): 
        self.water += int(input("how many ml of water do you want to add:\n"))
        self.milk += int(input("how many ml of milk do you want to add:\n"))
        self.coffee += int(input("how many grams of coffee beans do you want to add:\n"))
        self.return_to_menu()

    def take(self): 
        print(f"I gave you ${self.money}")
        self.money -= self.money
        self.return_to_menu()

    def status(self): 
        print(f"The coffee machine has:")
        print(f"{self.water} of water")
        print(f"{self.milk} of milk")
        print(f"{self.coffee} of coffee")
        print(f"${self.money} of money")
        self.return_to_menu()

CoffeeMachine(400, 540, 120, 550) 

output:
You want to (buy, fill, take, remaining, exit):
buy

What would you like to have? 1 - espresso, 2 - latte, 3 - cappuccino, back - to main menu:
espresso

You want to (buy, fill, take, remaining, exit):
fill

how many ml of water do you want to add:
100
how many ml of milk do you want to add:
0
how many grams of coffee do you want to add:
5

You want to (buy, fill, take, remaining, exit):
take

I gave you $550

You want to (buy, fill, take, remaining, exit):
remaining

The coffee machine has:
500 of water
540 of milk
125 of coffee 
$0 of money

You want to (buy, fill, take, remaining, exit):
exitclass CoffeeMachine:
    running = False
    def __init__(self, water, milk, coffee, money):
        self.water = water
        self.milk = milk
        self.coffee = coffee
        self.money = money

        if not CoffeeMachine.running:
            self.start()

    def start(self):
         self.running = True
         self.action = input("You want to (buy, fill, take, remaining, exit):\n")
         print()
         if self.action == "buy":
             self.buy()
         elif self.action == "fill":
             self.fill()
         elif self.action == "take":
             self.take()
         elif self.action == "exit":
             exit()
         elif self.action == "remaining":
             self.status()

    def return_to_menu(self):
          print()
          self.start()

    def available_check(self):
          self.not_available = ""
          if self.water - self.reduced[0] < 0:
              self.not_available = "water"
          elif self.milk - self.reduced[1] < 0:
              self.not_available = "milk"
          elif self.coffee_beans - self.reduced[2] < 0:
              self.not_available = "coffee "
     

    if self.not_available != "":
        print(f"Sorry, not enough {self.not_available}!")
        return False
    else:
        print("I have enough resources, making you a coffee!")
        return True

    def deduct_supplies(self): 
        self.water -= self.reduced[0]
        self.milk -= self.reduced[1]
        self.coffee -= self.reduced[2]
        self.money += self.reduced[3]

    def buy(self):
        self.choice = input("What would you like to have? 1 - espresso, 2 - latte, 3 - cappuccino:\n")
        if self.choice == '1':
            self.reduced = [250, 0, 16, 4] 
            if self.available_check(): 
                self.deduct_supplies() 

        elif self.choice == '2':
            self.reduced = [350, 75, 20, 7]
            if self.available_check():
                self.deduct_supplies()

        elif self.choice == "3":
            self.reduced = [200, 100, 12, 6]
            if self.available_check():
                self.deduct_supplies()

        elif self.choice == "back":
            self.return_to_menu()

        self.return_to_menu()

    def fill(self): 
        self.water += int(input("how many ml of water do you want to add:\n"))
        self.milk += int(input("how many ml of milk do you want to add:\n"))
        self.coffee += int(input("how many grams of coffee beans do you want to add:\n"))
        self.return_to_menu()

    def take(self): 
        print(f"I gave you ${self.money}")
        self.money -= self.money
        self.return_to_menu()

    def status(self): 
        print(f"The coffee machine has:")
        print(f"{self.water} of water")
        print(f"{self.milk} of milk")
        print(f"{self.coffee} of coffee")
        print(f"${self.money} of money")
        self.return_to_menu()

CoffeeMachine(400, 540, 120, 550) 

output:
You want to (buy, fill, take, remaining, exit):
buy

What would you like to have? 1 - espresso, 2 - latte, 3 - cappuccino, back - to main menu:
espresso

You want to (buy, fill, take, remaining, exit):
fill

how many ml of water do you want to add:
100
how many ml of milk do you want to add:
0
how many grams of coffee do you want to add:
5

You want to (buy, fill, take, remaining, exit):
take

I gave you $550

You want to (buy, fill, take, remaining, exit):
remaining

The coffee machine has:
500 of water
540 of milk
125 of coffee
$0 of money

You want to (buy, fill, take, remaining, exit):
exit
